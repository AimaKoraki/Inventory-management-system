<UserControl x:Class="IMS_Group03.Views.ProductView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:IMS_Group03.Views"
             xmlns:ctrl="clr-namespace:IMS_Group03.Controllers"
             xmlns:converters="clr-namespace:IMS_Group03.Converters"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=ctrl:ProductController, IsDesignTimeCreatable=False}"
             d:DesignHeight="700" d:DesignWidth="1000"
             Background="{StaticResource SecondaryBackgroundBrush}" Foreground="{StaticResource TextBrush}" 
              Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BooleanToVisibilityConverter x:Key="BoolToVis"/>
            <converters:NullToVisibilityConverter x:Key="NullToVis"/>
            <converters:InverseBooleanConverter x:Key="InvertBool"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Title & Toolbar -->
            <RowDefinition Height="*"/>
            <!-- DataGrid -->
            <RowDefinition Height="Auto"/>
            <!-- Edit Form Area -->
            <RowDefinition Height="Auto"/>
            <!-- Error Message Area -->
        </Grid.RowDefinitions>

        <!-- Title & Toolbar -->
        <Grid Grid.Row="0" Margin="0,0,0,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!-- MODIFIED: Applied ViewHeaderStyle -->
            <TextBlock Text="Product Management" Style="{StaticResource ViewHeaderStyle}"/>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="Refresh" Style="{StaticResource PrimaryActionButtonStyle}" x:Name="RefreshButton" Click="RefreshButton_Click" IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBool}}"/>
                <Button Content="Add New" Style="{StaticResource SuccessActionButtonStyle}" x:Name="AddButton" Click="AddButton_Click" IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBool}}"/>
                <Button Content="Edit Selected" Style="{StaticResource SecondaryActionButtonStyle}" x:Name="EditButton" Click="EditButton_Click" IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBool}}"/>
                <Button Content="Delete Selected" Style="{StaticResource DangerActionButtonStyle}" x:Name="DeleteButton" Click="DeleteButton_Click" IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBool}}"/>
            </StackPanel>
        </Grid>

        <!-- DataGrid for Products -->
        <DataGrid Grid.Row="1" x:Name="ProductsDataGrid" Margin="0,0,0,10"
                  ItemsSource="{Binding Products}" SelectedItem="{Binding SelectedProductGridItem, Mode=TwoWay}"
                  AutomationProperties.Name="List of Products"
                  Style="{StaticResource DefaultDataGridStyle}"
                  ColumnHeaderStyle="{StaticResource DefaultDataGridColumnHeaderStyle}"
                  RowStyle="{StaticResource DefaultDataGridRowStyle}"
                  CellStyle="{StaticResource DefaultDataGridCellStyle}"
                  IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBool}}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="70"/>
                <DataGridTextColumn Header="SKU" Binding="{Binding Sku}" Width="140"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                <DataGridTextColumn Header="Supplier" Binding="{Binding Supplier.Name}" Width="1.5*" SortMemberPath="Supplier.Name"/>
                <DataGridTextColumn Header="Qty" Binding="{Binding QuantityInStock}" Width="80" ElementStyle="{StaticResource RightAlignedTextCellStyle}"/>
                <DataGridTextColumn Header="Price" Binding="{Binding Price, StringFormat=C, TargetNullValue='0.00'}" Width="120" ElementStyle="{StaticResource RightAlignedTextCellStyle}"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Add/Edit Form Area -->
        <!-- MODIFIED: BorderBrush and Background -->
        <Border Grid.Row="2" BorderBrush="{StaticResource DisabledBorderBrush}" BorderThickness="1" CornerRadius="5" Margin="0,5,0,5" Padding="20"
                Background="{StaticResource FormPanelBackgroundBrush}"
            x:Name="EditFormBorder"
                Visibility="{Binding SelectedProductForForm, Converter={StaticResource NullToVis}}">
            <Grid x:Name="EditFormGrid" DataContext="{Binding SelectedProductForForm}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="120"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" MinWidth="120"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Product Name:" Style="{StaticResource LabelStyleDark}" VerticalAlignment="Center"/>
                <TextBox Grid.Row="0" Grid.Column="1" x:Name="NameTextBox" Margin="0,0,20,10" Style="{StaticResource TextBoxDarkStyle}"
                         Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}"/>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="SKU:" Style="{StaticResource LabelStyleDark}" VerticalAlignment="Center"/>
                <TextBox Grid.Row="1" Grid.Column="1" x:Name="SkuTextBox" Margin="0,0,20,10" Style="{StaticResource TextBoxDarkStyle}"
                         Text="{Binding Sku, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Text="Supplier:" Style="{StaticResource LabelStyleDark}" VerticalAlignment="Center"/>
                <ComboBox Grid.Row="2" Grid.Column="1" x:Name="SupplierComboBox" Margin="0,0,20,10" Style="{StaticResource ComboBoxDarkStyle}"
                           ItemsSource="{Binding DataContext.AvailableSuppliers, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                           SelectedValue="{Binding SupplierId, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static system:Int32.MinValue}}"
                           SelectedValuePath="Id">

                    <!-- This template tells the ComboBox exactly how to display each item. -->
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                </ComboBox>

                <TextBlock Grid.Row="0" Grid.Column="2" Text="Quantity in Stock:" Style="{StaticResource LabelStyleDark}" VerticalAlignment="Center"/>
                <!-- MODIFIED: Foreground for read-only TextBox -->
                <TextBox Grid.Row="0" Grid.Column="3" x:Name="QuantityTextBox" Margin="0,0,0,10" IsReadOnly="True" Foreground="{StaticResource SubtleTextBrush}" ToolTip="Stock quantity is managed via Stock Movements."
                         Text="{Binding QuantityInStock, Mode=OneWay}" Style="{StaticResource TextBoxDarkStyle}"/>

                <TextBlock Grid.Row="1" Grid.Column="2" Text="Price:" Style="{StaticResource LabelStyleDark}" VerticalAlignment="Center"/>
                <TextBox Grid.Row="1" Grid.Column="3" x:Name="PriceTextBox" Margin="0,0,0,10" 
         Style="{StaticResource TextBoxDarkStyle}"
         Text="{Binding Price, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True, TargetNullValue='0.00'}" />

                <!-- MODIFIED: Foreground for ID TextBlocks -->
                <TextBlock Grid.Row="2" Grid.Column="2" Text="Product ID:" Style="{StaticResource LabelStyleDark}" VerticalAlignment="Center" Foreground="{StaticResource SubtleTextBrush}"/>
                <TextBlock Grid.Row="2" Grid.Column="3" Text="{Binding Id}" VerticalAlignment="Center" Margin="0,0,0,10" Foreground="{StaticResource SubtleTextBrush}"/>

                <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,15,0,0">
                    <Button Content="Save" x:Name="SaveButton" Click="SaveButton_Click" Width="90" Style="{StaticResource SuccessActionButtonStyle}"/>
                    <Button Content="Cancel" Style="{StaticResource DangerActionButtonStyle}" x:Name="CancelButton" Click="CancelButton_Click" Width="90"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- MODIFIED: Foreground for ErrorMessageText -->
        <TextBlock Grid.Row="3" x:Name="ErrorMessageText"
                   Text="{Binding ErrorMessage}"
                   Foreground="{StaticResource DangerBrush}" Margin="0,10,0,0" TextWrapping="Wrap" HorizontalAlignment="Center"
                   Visibility="{Binding ErrorMessage, Converter={StaticResource NullToVis}}" MinHeight="20"/>

        <!-- MODIFIED: Background, ProgressBar.Foreground, TextBlock.Foreground & FontSize -->
        <Border Grid.RowSpan="4" Background="{StaticResource ModalOverlayBackgroundBrush}" x:Name="LoadingOverlay"
                Visibility="{Binding IsBusy, Converter={StaticResource BoolToVis}}">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <ProgressBar IsIndeterminate="True" Width="60" Height="60" Foreground="{StaticResource Accent1Brush}"/>
                <TextBlock Text="Processing..." Foreground="{StaticResource TextBrush}" FontSize="{StaticResource FontSizeMedium}" Margin="0,10,0,0" FontWeight="SemiBold"/>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>