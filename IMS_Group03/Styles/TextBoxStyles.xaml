<!-- Styles/TextBoxStyles.xaml (or a more general _ControlStyles.xaml) -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Style for Labels -->
    <Style x:Key="LabelStyleDark" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource SubtleTextBrush}"/>
        <!-- Using SubtleTextBrush -->
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Style for TextBoxes -->
    <Style x:Key="TextBoxDarkStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource BaseFontFamily}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CaretBrush" Value="{StaticResource TextBrush}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Accent1Brush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Accent1Brush}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for PasswordBoxes -->
    <Style x:Key="PasswordBoxDarkStyle" TargetType="PasswordBox">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource BaseFontFamily}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CaretBrush" Value="{StaticResource TextBrush}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Accent1Brush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Accent1Brush}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxItemDarkStyle" TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="8,6"/>
        <!-- Consistent padding -->
        <Setter Property="Background" Value="Transparent"/>
        <!-- Will be shown on Popup's background -->
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <!-- MouseOver in dropdown -->
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PanelBackgroundHoverBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <!-- When item is 'focused' in the dropdown list -->
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Accent1Brush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <!-- Item is 'focused' in dropdown but ComboBox itself doesn't have focus (e.g. window inactive) -->
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Accent1Brush}"/>
                            <!-- Or a less prominent highlight -->
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}"/>
                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for the ComboBox ToggleButton (Dropdown Arrow Area) -->
    <Style x:Key="ComboBoxToggleButtonDarkStyle" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                HorizontalAlignment="Right"
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow"
                                  Data="F1 M 0,0 L 2.5,2.5 L 5,0 Z"
                                  Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                  HorizontalAlignment="Center"
                                  Margin="0,0,3,0" 
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!-- ComboBox IsFocused trigger will handle border color change -->
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource Accent1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <!-- Dropdown is open -->
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource Accent1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource DisabledTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Updated Style for ComboBoxes -->
    <Style x:Key="ComboBoxDarkStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <!-- Match TextBox padding -->
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource BaseFontFamily}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemDarkStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               Margin="1"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">
                            <Border x:Name="dropDownBorder"
                                    Background="{StaticResource PanelBackgroundBrush}"
                                BorderBrush="{StaticResource Accent1Brush}"
                                BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" CornerRadius="3">
                                <ScrollViewer x:Name="DropDownScrollViewer" SnapsToDevicePixels="True">
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>

                        <ToggleButton x:Name="toggleButton"
                                      Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxToggleButtonDarkStyle}"/>

                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Trigger for Editable ComboBox (TextBox part) -->
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Hidden"/>
                            <!-- A full template would add a PART_EditableTextBox here and style it -->
                            <Setter TargetName="toggleButton" Property="Background" Value="Transparent"/>
                            <!-- Let editable textbox background show -->
                        </Trigger>
                        <!-- Standard Triggers -->
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="dropDownBorder" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="toggleButton" Property="BorderBrush" Value="{StaticResource Accent1Brush}"/>
                            <Setter TargetName="toggleButton" Property="BorderThickness" Value="1.5"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="toggleButton" Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                            <Setter TargetName="toggleButton" Property="Background" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter TargetName="toggleButton" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>